{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/anyschedulercontext\/init(fsmid:fsmname:duration:transitioned:)","title":"init(fsmID: Int, fsmName: String, duration: Duration, transitioned: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/anyschedulercontext\/aftercalls","title":"var afterCalls: [Duration]","type":"property"},{"path":"\/documentation\/fsm\/anyschedulercontext\/cloned","title":"var cloned: AnySchedulerContext","type":"property"},{"path":"\/documentation\/fsm\/anyschedulercontext\/currentstate","title":"var currentState: StateID","type":"property"},{"path":"\/documentation\/fsm\/anyschedulercontext\/custommirror","title":"var customMirror: Mirror","type":"property"},{"path":"\/documentation\/fsm\/anyschedulercontext\/duration","title":"var duration: Duration","type":"property"},{"path":"\/documentation\/fsm\/anyschedulercontext\/fsmid","title":"var fsmID: Int","type":"property"},{"path":"\/documentation\/fsm\/anyschedulercontext\/fsmname","title":"var fsmName: String","type":"property"},{"path":"\/documentation\/fsm\/anyschedulercontext\/transitioned","title":"var transitioned: Bool","type":"property"},{"path":"\/documentation\/fsm\/anyschedulercontext\/typeerasedresult","title":"var typeErasedResult: Sendable?","type":"property"}],"path":"\/documentation\/fsm\/anyschedulercontext","title":"AnySchedulerContext","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/anystatecontext\/custommirror","title":"var customMirror: Mirror","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/anystatecontext\/clone(fsmcontext:)","title":"func clone(fsmContext: FSMContext<FSMsContext, Environment, Parameters, Result>) -> AnyStateContext<FSMsContext, Environment, Parameters, Result>","type":"method"}],"path":"\/documentation\/fsm\/anystatecontext","title":"AnyStateContext","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmcontext\/init(context:environment:parameters:result:)","title":"convenience init(context: FSMsContext, environment: Environment, parameters: Parameters, result: Result?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmcontext\/cloned","title":"var cloned: FSMContext<FSMsContext, Environment, Parameters, Result>","type":"property"},{"path":"\/documentation\/fsm\/fsmcontext\/context","title":"var context: FSMsContext","type":"property"},{"path":"\/documentation\/fsm\/fsmcontext\/environment","title":"var environment: Environment","type":"property"},{"path":"\/documentation\/fsm\/fsmcontext\/isfinished","title":"var isFinished: Bool","type":"property"},{"path":"\/documentation\/fsm\/fsmcontext\/issuspended","title":"var isSuspended: Bool","type":"property"},{"path":"\/documentation\/fsm\/fsmcontext\/parameters","title":"let parameters: Parameters","type":"property"},{"path":"\/documentation\/fsm\/fsmcontext\/result","title":"var result: Result?","type":"property"},{"path":"\/documentation\/fsm\/fsmcontext\/status","title":"var status: FSMStatus","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmcontext\/after(_:)","title":"func after(Duration) -> Bool","type":"method"},{"path":"\/documentation\/fsm\/fsmcontext\/restart()","title":"func restart()","type":"method"},{"path":"\/documentation\/fsm\/fsmcontext\/resume()","title":"func resume()","type":"method"},{"path":"\/documentation\/fsm\/fsmcontext\/suspend()","title":"func suspend()","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmcontext\/subscript(dynamicmember:)-2y7x2","title":"subscript<T>(dynamicMember _: KeyPath<FSMsContext, T>) -> T","type":"subscript"},{"path":"\/documentation\/fsm\/fsmcontext\/subscript(dynamicmember:)-6pyy7","title":"subscript<T>(dynamicMember _: KeyPath<Environment, T>) -> T","type":"subscript"},{"path":"\/documentation\/fsm\/fsmcontext\/subscript(dynamicmember:)-8xeq9","title":"subscript<T>(dynamicMember _: KeyPath<Parameters, T>) -> T","type":"subscript"},{"path":"\/documentation\/fsm\/fsmcontext\/subscript(dynamicmember:)-92pf3","title":"subscript<T>(dynamicMember _: WritableKeyPath<Environment, T>) -> T","type":"subscript"},{"path":"\/documentation\/fsm\/fsmcontext\/subscript(dynamicmember:)-9eolh","title":"subscript<T>(dynamicMember _: WritableKeyPath<FSMsContext, T>) -> T","type":"subscript"}],"path":"\/documentation\/fsm\/fsmcontext","title":"FSMContext","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/finitestatemachine\/init(statecontainer:ringlet:handlers:initialcontext:initialringletcontext:initialstate:initialpreviousstate:suspendstate:)","title":"init(stateContainer: FiniteStateMachine<StateType, Ringlet, Parameters, Result, Context, Environment>.States, ringlet: Ringlet, handlers: Handlers, initialContext: Context, initialRingletContext: Ringlet.Context, initialState: Int, initialPreviousState: Int, suspendState: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/finitestatemachine\/handlers","title":"let handlers: Handlers","type":"property"},{"path":"\/documentation\/fsm\/finitestatemachine\/initialcontext","title":"let initialContext: Context","type":"property"},{"path":"\/documentation\/fsm\/finitestatemachine\/initialpreviousstate","title":"let initialPreviousState: Int","type":"property"},{"path":"\/documentation\/fsm\/finitestatemachine\/initialringletcontext","title":"let initialRingletContext: Ringlet.Context","type":"property"},{"path":"\/documentation\/fsm\/finitestatemachine\/initialstate","title":"let initialState: Int","type":"property"},{"path":"\/documentation\/fsm\/finitestatemachine\/ringlet","title":"let ringlet: Ringlet","type":"property"},{"path":"\/documentation\/fsm\/finitestatemachine\/statecontainer","title":"let stateContainer: FiniteStateMachine<StateType, Ringlet, Parameters, Result, Context, Environment>.States","type":"property"},{"path":"\/documentation\/fsm\/finitestatemachine\/states-swift.property","title":"var states: [FiniteStateMachine<StateType, Ringlet, Parameters, Result, Context, Environment>.State]","type":"property"},{"path":"\/documentation\/fsm\/finitestatemachine\/suspendstate","title":"let suspendState: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/finitestatemachine\/initialdata(with:)","title":"func initialData(with: Parameters) -> FiniteStateMachine<StateType, Ringlet, Parameters, Result, Context, Environment>.Data","type":"method"},{"path":"\/documentation\/fsm\/finitestatemachine\/isfinished(context:)","title":"func isFinished(context: AnySchedulerContext) -> Bool","type":"method"},{"path":"\/documentation\/fsm\/finitestatemachine\/issuspended(context:)","title":"func isSuspended(context: AnySchedulerContext) -> Bool","type":"method"},{"path":"\/documentation\/fsm\/finitestatemachine\/next(context:)","title":"func next(context: AnySchedulerContext)","type":"method"},{"path":"\/documentation\/fsm\/finitestatemachine\/savesnapshot(context:)","title":"func saveSnapshot(context: AnySchedulerContext)","type":"method"},{"path":"\/documentation\/fsm\/finitestatemachine\/setup(context:)","title":"func setup(context: AnySchedulerContext)","type":"method"},{"path":"\/documentation\/fsm\/finitestatemachine\/state(_:)","title":"func state(StateID) -> StateInformation","type":"method"},{"path":"\/documentation\/fsm\/finitestatemachine\/takesnapshot(context:)","title":"func takeSnapshot(context: AnySchedulerContext)","type":"method"},{"path":"\/documentation\/fsm\/finitestatemachine\/teardown(context:)","title":"func tearDown(context: AnySchedulerContext)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/fsm\/finitestatemachine\/data","title":"FiniteStateMachine.Data","type":"typealias"},{"path":"\/documentation\/fsm\/finitestatemachine\/state","title":"FiniteStateMachine.State","type":"typealias"},{"path":"\/documentation\/fsm\/finitestatemachine\/states-swift.typealias","title":"FiniteStateMachine.States","type":"typealias"}],"path":"\/documentation\/fsm\/finitestatemachine","title":"FiniteStateMachine","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/handlers\/init(actuators:externalvariables:globalvariables:sensors:)","title":"init(actuators: [AnyActuatorHandler], externalVariables: [AnyExternalVariableHandler], globalVariables: [AnyGlobalVariableHandler], sensors: [AnySensorHandler])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/handlers\/actuators","title":"var actuators: [AnyActuatorHandler]","type":"property"},{"path":"\/documentation\/fsm\/handlers\/externalvariables","title":"var externalVariables: [AnyExternalVariableHandler]","type":"property"},{"path":"\/documentation\/fsm\/handlers\/globalvariables","title":"var globalVariables: [AnyGlobalVariableHandler]","type":"property"},{"path":"\/documentation\/fsm\/handlers\/sensors","title":"var sensors: [AnySensorHandler]","type":"property"}],"path":"\/documentation\/fsm\/handlers","title":"Handlers","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/idregistrar\/id(of:)","title":"static func id(of: String) -> Int","type":"method"},{"path":"\/documentation\/fsm\/idregistrar\/name(of:)","title":"static func name(of: Int) -> String?","type":"method"}],"path":"\/documentation\/fsm\/idregistrar","title":"IDRegistrar","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/schedulercontext\/init(fsmid:fsmname:data:statecontainer:)","title":"init(fsmID: Int, fsmName: String, data: FSMData<RingletsContext, Parameters, Result, FSMsContext, Environment>, stateContainer: StateContainer<StateType, Parameters, Result, FSMsContext, Environment>?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/schedulercontext\/aftercalls","title":"var afterCalls: [Duration]","type":"property"},{"path":"\/documentation\/fsm\/schedulercontext\/cloned","title":"var cloned: AnySchedulerContext","type":"property"},{"path":"\/documentation\/fsm\/schedulercontext\/currentstate","title":"var currentState: StateID","type":"property"},{"path":"\/documentation\/fsm\/schedulercontext\/custommirror","title":"var customMirror: Mirror","type":"property"},{"path":"\/documentation\/fsm\/schedulercontext\/data","title":"var data: FSMData<RingletsContext, Parameters, Result, FSMsContext, Environment>","type":"property"},{"path":"\/documentation\/fsm\/schedulercontext\/environment","title":"var environment: Environment","type":"property"},{"path":"\/documentation\/fsm\/schedulercontext\/fsm","title":"var fsm: FSMsContext","type":"property"},{"path":"\/documentation\/fsm\/schedulercontext\/fsmcontext","title":"var fsmContext: FSMContext<FSMsContext, Environment, Parameters, Result>","type":"property"},{"path":"\/documentation\/fsm\/schedulercontext\/initialstate","title":"var initialState: StateID","type":"property"},{"path":"\/documentation\/fsm\/schedulercontext\/parameters","title":"var parameters: Parameters","type":"property"},{"path":"\/documentation\/fsm\/schedulercontext\/previousstate","title":"var previousState: StateID","type":"property"},{"path":"\/documentation\/fsm\/schedulercontext\/result","title":"var result: Result?","type":"property"},{"path":"\/documentation\/fsm\/schedulercontext\/ringletcontext","title":"var ringletContext: RingletsContext","type":"property"},{"path":"\/documentation\/fsm\/schedulercontext\/statecontainer","title":"var stateContainer: StateContainer<StateType, Parameters, Result, FSMsContext, Environment>!","type":"property"},{"path":"\/documentation\/fsm\/schedulercontext\/states","title":"var states: [FSMState<StateType, Parameters, Result, FSMsContext, Environment>]","type":"property"},{"path":"\/documentation\/fsm\/schedulercontext\/status","title":"var status: FSMStatus","type":"property"},{"path":"\/documentation\/fsm\/schedulercontext\/suspendstate","title":"var suspendState: StateID","type":"property"},{"path":"\/documentation\/fsm\/schedulercontext\/suspendedstate","title":"var suspendedState: StateID?","type":"property"},{"path":"\/documentation\/fsm\/schedulercontext\/typeerasedresult","title":"var typeErasedResult: Sendable?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/schedulercontext\/after(_:)","title":"func after(Duration) -> Bool","type":"method"},{"path":"\/documentation\/fsm\/schedulercontext\/context(forstate:)","title":"func context(forState: Int) -> AnyStateContext<FSMsContext, Environment, Parameters, Result>","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fsm\/schedulercontext\/subscript(dynamicmember:)-233s7","title":"subscript<T>(dynamicMember _: KeyPath<Parameters, T>) -> T","type":"subscript"},{"path":"\/documentation\/fsm\/schedulercontext\/subscript(dynamicmember:)-45u85","title":"subscript<T>(dynamicMember _: WritableKeyPath<FSMsContext, T>) -> T","type":"subscript"},{"path":"\/documentation\/fsm\/schedulercontext\/subscript(dynamicmember:)-5xlkm","title":"subscript<T>(dynamicMember _: WritableKeyPath<Environment, T>) -> T","type":"subscript"}],"path":"\/documentation\/fsm\/schedulercontext","title":"SchedulerContext","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/statecontainer\/init(states:)","title":"init(states: [FSMState<StateType, Parameters, Result, Context, Environment>])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/statecontainer\/states","title":"let states: [FSMState<StateType, Parameters, Result, Context, Environment>]","type":"property"}],"path":"\/documentation\/fsm\/statecontainer","title":"StateContainer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/statecontext\/init(context:fsmcontext:)","title":"init(context: StateContext, fsmContext: FSMContext<FSMsContext, Environment, Parameters, Result>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/statecontext\/context","title":"var context: StateContext","type":"property"},{"path":"\/documentation\/fsm\/statecontext\/custommirror","title":"var customMirror: Mirror","type":"property"},{"path":"\/documentation\/fsm\/statecontext\/environment","title":"var environment: Environment","type":"property"},{"path":"\/documentation\/fsm\/statecontext\/fsm","title":"var fsm: FSMsContext","type":"property"},{"path":"\/documentation\/fsm\/statecontext\/isfinished","title":"var isFinished: Bool","type":"property"},{"path":"\/documentation\/fsm\/statecontext\/issuspended","title":"var isSuspended: Bool","type":"property"},{"path":"\/documentation\/fsm\/statecontext\/parameters","title":"var parameters: Parameters","type":"property"},{"path":"\/documentation\/fsm\/statecontext\/result","title":"var result: Result?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/statecontext\/after(_:)","title":"func after(Duration) -> Bool","type":"method"},{"path":"\/documentation\/fsm\/statecontext\/clone(fsmcontext:)","title":"func clone(fsmContext: FSMContext<FSMsContext, Environment, Parameters, Result>) -> AnyStateContext<FSMsContext, Environment, Parameters, Result>","type":"method"},{"path":"\/documentation\/fsm\/statecontext\/restart()","title":"func restart()","type":"method"},{"path":"\/documentation\/fsm\/statecontext\/resume()","title":"func resume()","type":"method"},{"path":"\/documentation\/fsm\/statecontext\/suspend()","title":"func suspend()","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fsm\/statecontext\/subscript(dynamicmember:)-39xzx","title":"subscript<T>(dynamicMember _: KeyPath<Parameters, T>) -> T","type":"subscript"},{"path":"\/documentation\/fsm\/statecontext\/subscript(dynamicmember:)-46jgr","title":"subscript<T>(dynamicMember _: WritableKeyPath<StateContext, T>) -> T","type":"subscript"},{"path":"\/documentation\/fsm\/statecontext\/subscript(dynamicmember:)-8ux39","title":"subscript<T>(dynamicMember _: WritableKeyPath<FSMsContext, T>) -> T","type":"subscript"},{"path":"\/documentation\/fsm\/statecontext\/subscript(dynamicmember:)-9vusa","title":"subscript<T>(dynamicMember _: WritableKeyPath<Environment, T>) -> T","type":"subscript"}],"path":"\/documentation\/fsm\/statecontext","title":"StateContext","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/actuatorhandler\/initialvalue","title":"var initialValue: Self.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/actuatorhandler\/savesnapshot(value:)","title":"func saveSnapshot(value: Self.Value)","type":"method"}],"path":"\/documentation\/fsm\/actuatorhandler","title":"ActuatorHandler","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/fsm\/combinationsconvertible\/value","title":"Value","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/combinationsconvertible\/nonnilvalue","title":"var nonNilValue: Self.Value","type":"property"}],"path":"\/documentation\/fsm\/combinationsconvertible","title":"CombinationsConvertible","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/fsm\/contextuser\/context","title":"Context","type":"associatedtype"}],"path":"\/documentation\/fsm\/contextuser","title":"ContextUser","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/emptyinitialisable\/init()","title":"init()","type":"init"}],"path":"\/documentation\/fsm\/emptyinitialisable","title":"EmptyInitialisable","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/fsm\/environmenthandler\/value","title":"Value","type":"associatedtype"}],"path":"\/documentation\/fsm\/environmenthandler","title":"EnvironmentHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/fsm\/environmentsnapshot\/update(keypath:value:)-lg3p","title":"func update<T>(keyPath: WritableKeyPath<Self, T>, value: T)","type":"method"}],"title":"EnvironmentSnapshot Implementations","type":"groupMarker"}],"path":"\/documentation\/fsm\/environmentsnapshot\/update(keypath:value:)-n2b7","title":"func update<T>(keyPath: WritableKeyPath<Self, T>, value: T)","type":"method"}],"path":"\/documentation\/fsm\/environmentsnapshot","title":"EnvironmentSnapshot","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/fsm\/environmentuser\/environment","title":"Environment","type":"associatedtype"}],"path":"\/documentation\/fsm\/environmentuser","title":"EnvironmentUser","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/executable\/handlers","title":"var handlers: Handlers","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/executable\/isfinished(context:)","title":"func isFinished(context: AnySchedulerContext) -> Bool","type":"method"},{"path":"\/documentation\/fsm\/executable\/issuspended(context:)","title":"func isSuspended(context: AnySchedulerContext) -> Bool","type":"method"},{"path":"\/documentation\/fsm\/executable\/next(context:)","title":"func next(context: AnySchedulerContext)","type":"method"},{"path":"\/documentation\/fsm\/executable\/savesnapshot(context:)","title":"func saveSnapshot(context: AnySchedulerContext)","type":"method"},{"path":"\/documentation\/fsm\/executable\/setup(context:)","title":"func setup(context: AnySchedulerContext)","type":"method"},{"path":"\/documentation\/fsm\/executable\/state(_:)","title":"func state(StateID) -> StateInformation","type":"method"},{"path":"\/documentation\/fsm\/executable\/takesnapshot(context:)","title":"func takeSnapshot(context: AnySchedulerContext)","type":"method"},{"path":"\/documentation\/fsm\/executable\/teardown(context:)","title":"func tearDown(context: AnySchedulerContext)","type":"method"}],"path":"\/documentation\/fsm\/executable","title":"Executable","type":"protocol"},{"path":"\/documentation\/fsm\/externalvariablehandler","title":"ExternalVariableHandler","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/finishable\/isfinished","title":"var isFinished: Bool","type":"property"}],"path":"\/documentation\/fsm\/finishable","title":"Finishable","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/finitestatemachineoperations\/issuspended","title":"var isSuspended: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/finitestatemachineoperations\/restart()","title":"func restart()","type":"method"},{"path":"\/documentation\/fsm\/finitestatemachineoperations\/resume()","title":"func resume()","type":"method"},{"path":"\/documentation\/fsm\/finitestatemachineoperations\/suspend()","title":"func suspend()","type":"method"}],"path":"\/documentation\/fsm\/finitestatemachineoperations","title":"FiniteStateMachineOperations","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/globalvariablehandler\/value","title":"var value: Self.Value","type":"property"}],"path":"\/documentation\/fsm\/globalvariablehandler","title":"GlobalVariableHandler","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/fsm\/ringletprotocol\/statetype","title":"StateType","type":"associatedtype"},{"path":"\/documentation\/fsm\/ringletprotocol\/transitiontype","title":"TransitionType","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/ringletprotocol\/execute(context:)","title":"func execute(context: SchedulerContext<Self.StateType, Self.Context, Self.StateType.FSMsContext, Self.StateType.Environment, Self.StateType.Parameters, Self.StateType.Result>) -> StateID?","type":"method"}],"path":"\/documentation\/fsm\/ringletprotocol","title":"RingletProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/fsm\/globalvariablehandler\/takesnapshot()","title":"func takeSnapshot() -> Self.Value","type":"method"}],"title":"GlobalVariableHandler Implementations","type":"groupMarker"}],"path":"\/documentation\/fsm\/sensorhandler\/takesnapshot()","title":"func takeSnapshot() -> Self.Value","type":"method"}],"path":"\/documentation\/fsm\/sensorhandler","title":"SensorHandler","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/fsm\/stateprotocol\/fsmscontext","title":"FSMsContext","type":"associatedtype"},{"path":"\/documentation\/fsm\/stateprotocol\/parameters","title":"Parameters","type":"associatedtype"},{"path":"\/documentation\/fsm\/stateprotocol\/result","title":"Result","type":"associatedtype"},{"path":"\/documentation\/fsm\/stateprotocol\/typeerasedversion","title":"TypeErasedVersion","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/stateprotocol\/erased","title":"var erased: Self.TypeErasedVersion","type":"property"}],"path":"\/documentation\/fsm\/stateprotocol","title":"StateProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/fsm\/transitionprotocol\/source","title":"Source","type":"associatedtype"},{"path":"\/documentation\/fsm\/transitionprotocol\/target-swift.associatedtype","title":"Target","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/transitionprotocol\/target-swift.property","title":"var target: Self.Target","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/transitionprotocol\/cantransition(from:)","title":"func canTransition(from: Self.Source) -> Bool","type":"method"}],"path":"\/documentation\/fsm\/transitionprotocol","title":"TransitionProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/fsm\/typeerasedstate\/environment","title":"Environment","type":"associatedtype"},{"path":"\/documentation\/fsm\/typeerasedstate\/fsmscontext","title":"FSMsContext","type":"associatedtype"},{"path":"\/documentation\/fsm\/typeerasedstate\/parameters","title":"Parameters","type":"associatedtype"},{"path":"\/documentation\/fsm\/typeerasedstate\/result","title":"Result","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/typeerasedstate\/base","title":"var base: Any","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/typeerasedstate\/initialcontext(fsmcontext:)","title":"func initialContext(fsmContext: FSMContext<Self.FSMsContext, Self.Environment, Self.Parameters, Self.Result>) -> AnyStateContext<Self.FSMsContext, Self.Environment, Self.Parameters, Self.Result>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/typeerasedstate\/emptystate","title":"static var emptyState: Self","type":"property"}],"path":"\/documentation\/fsm\/typeerasedstate","title":"TypeErasedState","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/anyactuatorhandler\/init(_:updateenvironment:)","title":"init<Base>(Base, updateEnvironment: (UnsafeMutableRawPointer, Sendable) -> Void)","type":"init"},{"path":"\/documentation\/fsm\/anyactuatorhandler\/init(base:id:initialvalue:savesnapshot:updateenvironment:)","title":"init(base: () -> ActuatorHandler, id: () -> String, initialValue: () -> Sendable, saveSnapshot: (Sendable) -> Void, updateEnvironment: (UnsafeMutableRawPointer, Sendable) -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/anyactuatorhandler\/base","title":"var base: ActuatorHandler","type":"property"},{"path":"\/documentation\/fsm\/anyactuatorhandler\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/fsm\/anyactuatorhandler\/initialvalue","title":"var initialValue: Sendable","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/anyactuatorhandler\/savesnapshot(value:)","title":"func saveSnapshot(value: Sendable)","type":"method"},{"path":"\/documentation\/fsm\/anyactuatorhandler\/update(environment:with:)","title":"func update(environment: UnsafeMutableRawPointer, with: Sendable)","type":"method"}],"path":"\/documentation\/fsm\/anyactuatorhandler","title":"AnyActuatorHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/anyexternalvariablehandler\/init(_:updateenvironment:)","title":"init<Base>(Base, updateEnvironment: (UnsafeMutableRawPointer, Sendable) -> Void)","type":"init"},{"path":"\/documentation\/fsm\/anyexternalvariablehandler\/init(base:id:savesnapshot:takesnapshot:updateenvironment:)","title":"init(base: () -> ExternalVariableHandler, id: () -> String, saveSnapshot: (Sendable) -> Void, takeSnapshot: () -> Sendable, updateEnvironment: (UnsafeMutableRawPointer, Sendable) -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/anyexternalvariablehandler\/base","title":"var base: ExternalVariableHandler","type":"property"},{"path":"\/documentation\/fsm\/anyexternalvariablehandler\/id","title":"var id: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/anyexternalvariablehandler\/savesnapshot(value:)","title":"func saveSnapshot(value: Sendable)","type":"method"},{"path":"\/documentation\/fsm\/anyexternalvariablehandler\/takesnapshot()","title":"func takeSnapshot() -> Sendable","type":"method"},{"path":"\/documentation\/fsm\/anyexternalvariablehandler\/update(environment:with:)","title":"func update(environment: UnsafeMutableRawPointer, with: Sendable)","type":"method"}],"path":"\/documentation\/fsm\/anyexternalvariablehandler","title":"AnyExternalVariableHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/anyglobalvariablehandler\/init(_:updateenvironment:)","title":"init<Base>(Base, updateEnvironment: (UnsafeMutableRawPointer, Sendable) -> Void)","type":"init"},{"path":"\/documentation\/fsm\/anyglobalvariablehandler\/init(base:id:savesnapshot:takesnapshot:updateenvironment:)","title":"init(base: () -> GlobalVariableHandler, id: () -> String, saveSnapshot: (Sendable) -> Void, takeSnapshot: () -> Sendable, updateEnvironment: (UnsafeMutableRawPointer, Sendable) -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/anyglobalvariablehandler\/base","title":"var base: GlobalVariableHandler","type":"property"},{"path":"\/documentation\/fsm\/anyglobalvariablehandler\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/fsm\/anyglobalvariablehandler\/value","title":"var value: Sendable","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/anyglobalvariablehandler\/update(environment:with:)","title":"func update(environment: UnsafeMutableRawPointer, with: Sendable)","type":"method"}],"path":"\/documentation\/fsm\/anyglobalvariablehandler","title":"AnyGlobalVariableHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/anysensorhandler\/init(_:updateenvironment:)","title":"init<Base>(Base, updateEnvironment: (UnsafeMutableRawPointer, Sendable) -> Void)","type":"init"},{"path":"\/documentation\/fsm\/anysensorhandler\/init(base:id:takesnapshot:updateenvironment:)","title":"init(base: () -> SensorHandler, id: () -> String, takeSnapshot: () -> Sendable, updateEnvironment: (UnsafeMutableRawPointer, Sendable) -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/anysensorhandler\/base","title":"var base: SensorHandler","type":"property"},{"path":"\/documentation\/fsm\/anysensorhandler\/id","title":"var id: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/anysensorhandler\/takesnapshot()","title":"func takeSnapshot() -> Sendable","type":"method"},{"path":"\/documentation\/fsm\/anysensorhandler\/update(environment:with:)","title":"func update(environment: UnsafeMutableRawPointer, with: Sendable)","type":"method"}],"path":"\/documentation\/fsm\/anysensorhandler","title":"AnySensorHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/anytransition\/init(_:)","title":"init<Base>(Base)","type":"init"},{"path":"\/documentation\/fsm\/anytransition\/init(to:cantransition:)","title":"init(to: Target, canTransition: (Source) -> Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/anytransition\/target","title":"let target: Target","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/anytransition\/cantransition(from:)","title":"func canTransition(from: Source) -> Bool","type":"method"},{"path":"\/documentation\/fsm\/anytransition\/map(_:)","title":"func map<NewTarget>((Target) -> NewTarget) -> AnyTransition<Source, NewTarget>","type":"method"}],"path":"\/documentation\/fsm\/anytransition","title":"AnyTransition","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/emptydatastructure\/init()","title":"init()","type":"init"},{"path":"\/documentation\/fsm\/emptydatastructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/emptydatastructure\/update(keypath:value:)","title":"func update<T>(keyPath: WritableKeyPath<Self, T>, value: T)","type":"method"}],"path":"\/documentation\/fsm\/emptydatastructure\/environmentsnapshot-implementations","title":"EnvironmentSnapshot Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fsm\/emptydatastructure\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/fsm\/emptydatastructure\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fsm\/emptydatastructure","title":"EmptyDataStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/eventmessage\/init(eventcounter:value:)","title":"init(eventCounter: Counter, value: Value)","type":"init"},{"path":"\/documentation\/fsm\/eventmessage\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/eventmessage\/eventcounter","title":"var eventCounter: Counter","type":"property"},{"path":"\/documentation\/fsm\/eventmessage\/value","title":"var value: Value","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fsm\/eventmessage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/fsm\/eventmessage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fsm\/eventmessage","title":"EventMessage","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmdata\/init(acceptingstates:statecontexts:fsmcontext:ringletcontext:actuatorvalues:initialstate:currentstate:previousstate:suspendstate:suspendedstate:)","title":"init(acceptingStates: [Bool], stateContexts: [AnyStateContext<Context, Environment, Parameters, Result>], fsmContext: FSMContext<Context, Environment, Parameters, Result>, ringletContext: RingletsContext, actuatorValues: [Sendable], initialState: Int, currentState: Int, previousState: Int, suspendState: Int, suspendedState: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmdata\/acceptingstates","title":"var acceptingStates: [Bool]","type":"property"},{"path":"\/documentation\/fsm\/fsmdata\/actuatorvalues","title":"var actuatorValues: [Sendable]","type":"property"},{"path":"\/documentation\/fsm\/fsmdata\/cloned","title":"var cloned: FSMData<RingletsContext, Parameters, Result, Context, Environment>","type":"property"},{"path":"\/documentation\/fsm\/fsmdata\/currentstate","title":"var currentState: StateID","type":"property"},{"path":"\/documentation\/fsm\/fsmdata\/fsmcontext","title":"var fsmContext: FSMContext<Context, Environment, Parameters, Result>","type":"property"},{"path":"\/documentation\/fsm\/fsmdata\/initialstate","title":"var initialState: StateID","type":"property"},{"path":"\/documentation\/fsm\/fsmdata\/isfinished","title":"var isFinished: Bool","type":"property"},{"path":"\/documentation\/fsm\/fsmdata\/issuspended","title":"var isSuspended: Bool","type":"property"},{"path":"\/documentation\/fsm\/fsmdata\/previousstate","title":"var previousState: StateID","type":"property"},{"path":"\/documentation\/fsm\/fsmdata\/ringletcontext","title":"var ringletContext: RingletsContext","type":"property"},{"path":"\/documentation\/fsm\/fsmdata\/statecontexts","title":"var stateContexts: [AnyStateContext<Context, Environment, Parameters, Result>]","type":"property"},{"path":"\/documentation\/fsm\/fsmdata\/suspendstate","title":"var suspendState: StateID","type":"property"},{"path":"\/documentation\/fsm\/fsmdata\/suspendedstate","title":"var suspendedState: StateID?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmdata\/restart()","title":"func restart()","type":"method"},{"path":"\/documentation\/fsm\/fsmdata\/resume()","title":"func resume()","type":"method"},{"path":"\/documentation\/fsm\/fsmdata\/suspend()","title":"func suspend()","type":"method"}],"path":"\/documentation\/fsm\/fsmdata","title":"FSMData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsminformation\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/fsm\/fsminformation\/init(id:name:dependencies:)","title":"init(id: Int, name: String, dependencies: [FSMDependency])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsminformation\/dependencies","title":"let dependencies: [FSMDependency]","type":"property"},{"path":"\/documentation\/fsm\/fsminformation\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/fsm\/fsminformation\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsminformation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/fsm\/fsminformation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fsm\/fsminformation","title":"FSMInformation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmstate\/init(id:name:statetype:transitions:takesnapshot:savesnapshot:)","title":"init(id: StateID, name: String, stateType: StateType, transitions: [AnyTransition<AnyStateContext<Context, Environment, Parameters, Result>, StateID>], takeSnapshot: (UnsafeMutablePointer<Environment>, Handlers, UnsafePointer<Sendable>) -> Void, saveSnapshot: (UnsafePointer<Environment>, Handlers, UnsafeMutablePointer<Sendable>) -> Void)","type":"init"},{"path":"\/documentation\/fsm\/fsmstate\/init(information:statetype:transitions:takesnapshot:savesnapshot:)","title":"init(information: StateInformation, stateType: StateType, transitions: [AnyTransition<AnyStateContext<Context, Environment, Parameters, Result>, StateID>], takeSnapshot: (UnsafeMutablePointer<Environment>, Handlers, UnsafePointer<Sendable>) -> Void, saveSnapshot: (UnsafePointer<Environment>, Handlers, UnsafeMutablePointer<Sendable>) -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmstate\/id","title":"var id: StateID","type":"property"},{"path":"\/documentation\/fsm\/fsmstate\/information","title":"let information: StateInformation","type":"property"},{"path":"\/documentation\/fsm\/fsmstate\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/fsm\/fsmstate\/savesnapshot","title":"let saveSnapshot: (UnsafePointer<Environment>, Handlers, UnsafeMutablePointer<Sendable>) -> Void","type":"property"},{"path":"\/documentation\/fsm\/fsmstate\/statetype","title":"let stateType: StateType","type":"property"},{"path":"\/documentation\/fsm\/fsmstate\/takesnapshot","title":"let takeSnapshot: (UnsafeMutablePointer<Environment>, Handlers, UnsafePointer<Sendable>) -> Void","type":"property"},{"path":"\/documentation\/fsm\/fsmstate\/transitions","title":"let transitions: [AnyTransition<AnyStateContext<Context, Environment, Parameters, Result>, StateID>]","type":"property"}],"path":"\/documentation\/fsm\/fsmstate","title":"FSMState","type":"struct"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/roundrobinscheduler\/slotdata\/init(info:executable:context:contextfactory:)","title":"init(info: FSMInformation, executable: Executable, context: AnySchedulerContext, contextFactory: ((DataStructure)?) -> AnySchedulerContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/roundrobinscheduler\/slotdata\/context","title":"let context: AnySchedulerContext","type":"property"},{"path":"\/documentation\/fsm\/roundrobinscheduler\/slotdata\/contextfactory","title":"let contextFactory: ((DataStructure)?) -> AnySchedulerContext","type":"property"},{"path":"\/documentation\/fsm\/roundrobinscheduler\/slotdata\/executable","title":"let executable: Executable","type":"property"},{"path":"\/documentation\/fsm\/roundrobinscheduler\/slotdata\/info","title":"let info: FSMInformation","type":"property"},{"path":"\/documentation\/fsm\/roundrobinscheduler\/slotdata\/isfinished","title":"var isFinished: Bool","type":"property"},{"path":"\/documentation\/fsm\/roundrobinscheduler\/slotdata\/issuspended","title":"var isSuspended: Bool","type":"property"},{"path":"\/documentation\/fsm\/roundrobinscheduler\/slotdata\/shouldterminate","title":"var shouldTerminate: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/roundrobinscheduler\/slotdata\/next()","title":"func next()","type":"method"},{"path":"\/documentation\/fsm\/roundrobinscheduler\/slotdata\/savesnapshot()","title":"func saveSnapshot()","type":"method"},{"path":"\/documentation\/fsm\/roundrobinscheduler\/slotdata\/takesnapshot()","title":"func takeSnapshot()","type":"method"}],"path":"\/documentation\/fsm\/roundrobinscheduler\/slotdata","title":"RoundRobinScheduler.SlotData","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/roundrobinscheduler\/map\/init(slots:)","title":"init(slots: [RoundRobinScheduler.SlotData])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/roundrobinscheduler\/map\/slots","title":"var slots: [RoundRobinScheduler.SlotData]","type":"property"}],"path":"\/documentation\/fsm\/roundrobinscheduler\/map","title":"RoundRobinScheduler.Map","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/roundrobinscheduler\/init(map:)","title":"init(map: RoundRobinScheduler.Map)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/roundrobinscheduler\/shouldterminate","title":"var shouldTerminate: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fsm\/roundrobinscheduler\/cycle()","title":"func cycle()","type":"method"}],"path":"\/documentation\/fsm\/roundrobinscheduler","title":"RoundRobinScheduler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/stateinformation\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/fsm\/stateinformation\/init(id:name:)","title":"init(id: Int, name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/stateinformation\/id","title":"var id: Int","type":"property"},{"path":"\/documentation\/fsm\/stateinformation\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fsm\/stateinformation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/fsm\/stateinformation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fsm\/stateinformation","title":"StateInformation","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/fsm\/verbose","title":"var verbose: Int","type":"var"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/fsm\/actuatorvalue","title":"ActuatorValue","type":"typealias"},{"path":"\/documentation\/fsm\/contextprotocol","title":"ContextProtocol","type":"typealias"},{"path":"\/documentation\/fsm\/datastructure","title":"DataStructure","type":"typealias"},{"path":"\/documentation\/fsm\/externalvariablevalue","title":"ExternalVariableValue","type":"typealias"},{"path":"\/documentation\/fsm\/globalvariablevalue","title":"GlobalVariableValue","type":"typealias"},{"path":"\/documentation\/fsm\/sensorvalue","title":"SensorValue","type":"typealias"},{"path":"\/documentation\/fsm\/stateid","title":"StateID","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmdependency\/async(id:)","title":"case async(id: Int)","type":"case"},{"path":"\/documentation\/fsm\/fsmdependency\/partial(id:)","title":"case partial(id: Int)","type":"case"},{"path":"\/documentation\/fsm\/fsmdependency\/submachine(id:)","title":"case submachine(id: Int)","type":"case"},{"path":"\/documentation\/fsm\/fsmdependency\/sync(id:)","title":"case sync(id: Int)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmdependency\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmdependency\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/fsm\/fsmdependency\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fsm\/fsmdependency","title":"FSMDependency","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmstatus\/executing(transitioned:)","title":"case executing(transitioned: FSMStatus.TransitionType)","type":"case"},{"path":"\/documentation\/fsm\/fsmstatus\/finished","title":"case finished","type":"case"},{"path":"\/documentation\/fsm\/fsmstatus\/restarted(transitioned:)","title":"case restarted(transitioned: FSMStatus.TransitionType)","type":"case"},{"path":"\/documentation\/fsm\/fsmstatus\/restarting","title":"case restarting","type":"case"},{"path":"\/documentation\/fsm\/fsmstatus\/resumed(transitioned:)","title":"case resumed(transitioned: FSMStatus.TransitionType)","type":"case"},{"path":"\/documentation\/fsm\/fsmstatus\/resuming","title":"case resuming","type":"case"},{"path":"\/documentation\/fsm\/fsmstatus\/suspended(transitioned:)","title":"case suspended(transitioned: FSMStatus.TransitionType)","type":"case"},{"path":"\/documentation\/fsm\/fsmstatus\/suspending","title":"case suspending","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmstatus\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmstatus\/transitioned","title":"var transitioned: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmstatus\/allcases","title":"static var allCases: [FSMStatus]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmstatus\/transitiontype\/newstate","title":"case newState","type":"case"},{"path":"\/documentation\/fsm\/fsmstatus\/transitiontype\/notransition","title":"case noTransition","type":"case"},{"path":"\/documentation\/fsm\/fsmstatus\/transitiontype\/samestate","title":"case sameState","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmstatus\/transitiontype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmstatus\/transitiontype\/transitioned","title":"var transitioned: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmstatus\/transitiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/fsm\/fsmstatus\/transitiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fsm\/fsmstatus\/transitiontype","title":"FSMStatus.TransitionType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fsm\/fsmstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/fsm\/fsmstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fsm\/fsmstatus","title":"FSMStatus","type":"enum"}],"path":"\/documentation\/fsm","title":"FSM","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}